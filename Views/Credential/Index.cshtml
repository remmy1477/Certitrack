@model X.PagedList.IPagedList<Certitrack.ViewModels.CredentialDetailIndexVM>
@using X.PagedList.Mvc.Core
@using X.PagedList
@{
    ViewData["Title"] = "Credential Detail List";
    Layout = "_MenuLayout"; // Make sure this matches your layout
    var userRole = Context.Session.GetString("UserRoleName");
    //bool isVerify = Model.IsVerified; // set this in your ViewModel/controller
}

<div id="content" class="content">

    <ol class="breadcrumb float-xl-right">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item active">Credential Detail</li>
    </ol>

    <h1 class="page-header">Credential Details <small>List of Credential Detail</small></h1>

    <div class="col-xl-12">
        <div class="panel panel-inverse" data-sortable-id="table-basic-1">
            <div class="panel-heading">
                <h4 class="panel-title">Crenditial Detail Table</h4>
                <div class="panel-heading-btn">
                    <a asp-action="ExportInvites" class="btn btn-sm btn-success">Download CSV</a>
                </div>
            </div>

            <div class="panel-body">
                @if (TempData["Message"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["Message"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                <div class="mb-3 text-end">
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-user-plus"></i>Insert Credential Detail
                    </a>
                </div>

                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>#</th>
                                <th>
                                    @Html.ActionLink("Institution", "Index", new { sortOrder = ViewBag.InstitutionIdSortParm, page = Model.PageNumber })
                                </th>
                                <th>
                                    @Html.ActionLink("School", "Index", new { sortOrder = ViewBag.SchoolIdSortParm, page = Model.PageNumber })
                                </th>
                                @* <th>Created</th>
                 <th>Expires</th> *@
                                <th>Name</th>
                                <th>PhoneNo.</th>
                                <th>Certificate No.</th>
                                <th>Payment Status</th>
                                <th>Verification Status</th>
                                <th>Verification Result</th> 
                                <th>Actions</th>

                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Any())
                            {
                                int sn = (Model.PageNumber - 1) * Model.PageSize + 1;
                                foreach (var certificate in Model)
                                {
                                    <tr>
                                        <td>@sn</td>
                                        <td>@certificate.InstitutionNm</td>
                                        <td>@certificate.SchoolNm</td>
                                        @*  <td>@user.Created.ToString("yyyy-MM-dd HH:mm")</td>
                         <td>@user.ExpiresAt.ToString("yyyy-MM-dd HH:mm")</td> *@
                                        <td>@($"{certificate.HolderFirstName} {certificate.HolderMiddleName} {certificate.HolderLastName}".Trim())</td>
                                        <td>@certificate.HolderPhoneNumber</td>
                                        <td>@certificate.CertificateNo</td>
                                        <td>
                                            @if (certificate.Ispaid)
                                            {
                                                <span class="badge bg-success">Paid</span>
                                            }
                                            else
                                            {
                                                <button class="btn btn-sm btn-success pay-btn mt-1"
                                                        data-id="@certificate.Id"
                                                        data-email="@certificate.HolderEmail"
                                                        data-name="@($"{certificate.HolderFirstName} {certificate.HolderMiddleName} {certificate.HolderLastName}".Trim())"
                                                        data-type="C"
                                                        data-amount="200000">
                                                    Pay Now
                                                </button> @* Amount in Kobo e.g. ₦2000 = 200000 *@
                                            }
                                        </td>
                                        <td>
                                            @if (certificate.IsVerified)
                                            {
                                                <span class="badge bg-success">Verified</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">Pending Verification</span>
                                            }
                                        </td>
                                        <td>@certificate.Status</td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-info" data-toggle="modal" data-target="#detailsModal_@certificate.Id">
                                                View Detail
                                            </button>
                                            @if (userRole == "SuperAdmin")
                                            {
                                                <a asp-action="Edit" asp-route-id="@certificate.Id" class="btn btn-sm btn-warning">Edit</a>
                                                <a asp-action="Delete" asp-route-id="@certificate.Id" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this user?');">Delete</a>
                                            }
                                            else if (userRole == "VerifierUser")
                                            {
                                                <button class="btn btn-success verify-btn" data-id="@certificate.Id">Verify</button>
                                            }
                                            else if (userRole == "VerifierApproval")
                                            {
                                                bool isVerify = certificate.IsVerified; // Assuming this is set in your ViewModel
                                                @* <button class="btn btn-success confirm-btn" data-id="@certificate.Id">Credential Confirmed Authentic</button>
                                                <button class="btn btn-danger reject-btn" data-id="@certificate.Id">Credential Not Authentic</button> *@
                                                <button class="btn btn-success confirm-btn" data-id="@certificate.Id" @(isVerify ? "" : "disabled")>
                                                    Credential Confirmed Authentic
                                                </button>
                                                <button class="btn btn-danger reject-btn" data-id="@certificate.Id" @(isVerify ? "" : "disabled")>
                                                    Credential Not Authentic
                                                </button>
                                            }

                                        </td>
                                    </tr>

                                    <div class="modal fade" id="detailsModal_@certificate.Id" tabindex="-1" role="dialog" aria-labelledby="detailsLabel_@certificate.Id" aria-hidden="true">
                                        <div class="modal-dialog modal-lg modal-dialog-scrollable" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="detailsLabel_@certificate.Id">Certificate Detail</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    <dl class="row">
                                                        <dt class="col-sm-4">Institution</dt>
                                                        <dd class="col-sm-8">@certificate.InstitutionNm</dd>

                                                        <dt class="col-sm-4">School</dt>
                                                        <dd class="col-sm-8">@certificate.SchoolNm</dd>

                                                        <dt class="col-sm-4">Faculty/College/School</dt>
                                                        <dd class="col-sm-8">@certificate.FacultyNm</dd>

                                                        <dt class="col-sm-4">Department</dt>
                                                        <dd class="col-sm-8">@certificate.Department</dd>

                                                     <dt class="col-sm-4">Degree Type</dt>
                                                        <dd class="col-sm-8">@certificate.DegreeNm</dd>

                                                        <dt class="col-sm-4">Degree Class</dt>
                                                        <dd class="col-sm-8">@certificate.DegreeClassNm</dd>

                                                        <dt class="col-sm-4">Full Name</dt>
                                                        <dd class="col-sm-8">@($"{certificate.HolderFirstName} {certificate.HolderMiddleName} {certificate.HolderLastName}".Trim())</dd>

                                                        <dt class="col-sm-4">Phone</dt>
                                                        <dd class="col-sm-8">@certificate.HolderPhoneNumber</dd>

                                                        <dt class="col-sm-4">Certificate No</dt>
                                                        <dd class="col-sm-8">@certificate.CertificateNo</dd>

                                                        <dt class="col-sm-4">Year of Graduation</dt>
                                                        <dd class="col-sm-8">@certificate.YearOfGraduation</dd>

                                                        <dt class="col-sm-4">Status</dt>
                                                        <dd class="col-sm-8">@certificate.Status</dd>

                                                        <dt class="col-sm-4">Verified</dt>
                                                        <dd class="col-sm-8">
                                                            @if (certificate.IsVerified)
                                                            {
                                                                <span class="badge badge-success">Yes</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="badge badge-warning">No</span>
                                                            }
                                                        </dd>
                                                        <dt class="col-sm-4">Payment Status</dt>
                                                        <dd class="col-sm-8">
                                                            @if (certificate.Ispaid)
                                                            {
                                                                <span class="badge badge-success">Paid</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="badge badge-warning">Pending Payment</span>
                                                            }
                                                        </dd>
                                                    </dl>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    sn++;
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="text-center">No Credential Detail found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div class="d-flex justify-content-center">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort }), new PagedListRenderOptions()
                   {
                       LiElementClasses = new[] { "page-item" },
                       PageClasses = new[] { "page-link" },
                       UlElementClasses = new[] { "pagination" }
                   })
                    </div>
                </div>
               
            </div>
        </div>
    </div>
</div>
@* <script src="https://js.paystack.co/v1/inline.js"></script> *@
@section Scripts {
   
    <script>
        // For VerifierUser - Verify
        $('.verify-btn').on('click', function () {
            const certificateId = $(this).data('id');
            $.ajax({
                url: '/Credential/Verify', // Update as per your controller route
                method: 'POST',
                data: { id: certificateId },
                success: function (response) {
                    alert(response.message || "Verification recorded.");
                    location.reload();
                },
                error: function () {
                    alert("Error verifying certificate.");
                }
            });
        });

        // For VerifierApproval - Confirm Authentic
        // $('.confirm-btn').on('click', function () {
        //     const certificateId = $(this).data('id');
        //     $.ajax({
        //         url: '/Certificate/ConfirmAuthentic',
        //         method: 'POST',
        //         data: { id: certificateId },
        //         success: function (response) {
        //             alert(response.message || "Credential confirmed as authentic.");
        //             location.reload();
        //         },
        //         error: function () {
        //             alert("Error confirming credential.");
        //         }
        //     });
        // });

        // For VerifierApproval - Not Authentic
        // $('.reject-btn').on('click', function () {
        //     const certificateId = $(this).data('id');
        //     $.ajax({
        //         url: '/Certificate/RejectCredential',
        //         method: 'POST',
        //         data: { id: certificateId },
        //         success: function (response) {
        //             alert(response.message || "Credential marked as not authentic.");
        //             location.reload();
        //         },
        //         error: function () {
        //             alert("Error rejecting credential.");
        //         }
        //     });
        // });
                $('.confirm-btn, .reject-btn').on('click', function () {
            if ($(this).prop('disabled')) return;

            const certificateId = $(this).data('id');
            const isConfirm = $(this).hasClass('confirm-btn');
            const url = isConfirm ? '/Credential/ConfirmAuthentic' : '/Credential/RejectCredential';
            const message = isConfirm ? "Credential confirmed as authentic." : "Credential marked as not authentic.";

            $.ajax({
                url: url,
                method: 'POST',
                data: { id: certificateId },
                success: function (response) {
                    alert(response.message || message);
                    location.reload();
                },
                error: function () {
                    alert("Error processing request.");
                }
            });
        });

    </script>

    <script>
                $(document).ready(function () {
            $('.pay-btn').click(function () {
                const btn = $(this);
                const credentialId = btn.data('id');
                const email = btn.data('email');
                const fullName = btn.data('name');
                const amount = btn.data('amount');
                const type = btn.data('type');

                $.ajax({
                    type: 'POST',
                    url: '/Payment/Initialize',
                    data: {
                        id: credentialId,
                        email: email,
                        amount: amount,
                        name: fullName, // Add comma here
                        type: type
                    },
                    success: function (response) {
                        if (response && response.status && response.data && response.data.authorization_url) {
                            window.location.href = response.data.authorization_url;
                        } else {
                            alert('Error: Could not initiate payment.');
                        }
                    },
                    error: function () {
                        alert('Error initiating payment.');
                    }
                });
            });
        });

       
        
    </script>
}
